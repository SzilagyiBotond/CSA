     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fopen,fclose,fread,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 696E7075742E747874-         input_file_name db "input.txt",0
    17 00000009 00                 
    18 0000000A 7200                        input_file_access db "r",0
    19 0000000C FFFFFFFF                    input_file_descriptor dd -1
    20 00000010 6E756D626572206F66-         output_format db "number of y=%d, number of z=%d",0
    20 00000019 20793D25642C206E75-
    20 00000022 6D626572206F66207A-
    20 0000002B 3D256400           
    21 0000002F 00000000                    y_number dd 0
    22 00000033 00000000                    z_number dd 0
    23 00000037 <res 00000064>              string resb 100
    24 0000009B 7A00                        z db "z",0
    25 0000009D 7900                        y db "y",0
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ; ...
    30 00000000 68[0A000000]                    push dword input_file_access
    31 00000005 68[00000000]                    push dword input_file_name
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp,4*2
    34                                          
    35 00000013 A3[0C000000]                    mov [input_file_descriptor],eax
    36 00000018 83F800                          cmp eax,0
    37 0000001B 7472                            je final
    38                                          
    39 0000001D FF35[0C000000]                  push dword [input_file_descriptor]
    40 00000023 6A64                            push dword 100
    41 00000025 6A01                            push dword 1
    42 00000027 68[37000000]                    push dword string
    43 0000002C FF15[00000000]                  call [fread]
    44 00000032 83C410                          add esp,4*4
    45                                          
    46 00000035 FF35[0C000000]                  push dword [input_file_descriptor]
    47 0000003B FF15[00000000]                  call [fclose]
    48 00000041 83C404                          add esp,4
    49                                          
    50 00000044 BE[37000000]                    mov esi,string
    51 00000049 B964000000                      mov ecx,100
    52                                          count:
    53 0000004E 803E00                          cmp byte[esi],0
    54 00000051 7422                            je out_of_loop
    55 00000053 A0[9B000000]                    mov al,[z]
    56 00000058 8A25[9D000000]                  mov ah,[y]
    57 0000005E 3A06                            cmp al,[esi]
    58 00000060 7506                            jne dont_add_z
    59 00000062 FF05[33000000]                  inc dword [z_number]
    60                                          dont_add_z:
    61 00000068 3A26                            cmp ah,[esi]
    62 0000006A 7506                            jne dont_add
    63 0000006C FF05[2F000000]                  inc dword [y_number]
    64                                          dont_add:
    65 00000072 46                              inc esi
    66                                          
    67                                          
    68 00000073 E2D9                            loop count
    69                                          out_of_loop:
    70 00000075 FF35[33000000]                  push dword [z_number]
    71 0000007B FF35[2F000000]                  push dword [y_number]
    72 00000081 68[10000000]                    push dword output_format
    73 00000086 FF15[00000000]                  call [printf]
    74 0000008C 83C40C                          add esp,4*3
    75                                          final:
    76                                          ; exit(0)
    77 0000008F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    78 00000091 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
