     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fscanf,printf,fopen,fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fscanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 696E7075742E747874-         input_file_name db "input.txt",0
    17 00000009 00                 
    18 0000000A 7200                        input_file_acces db "r",0
    19 0000000C FFFFFFFF                    input_file_descriptor dd -1
    20 00000010 256400                      input_format db "%d",0
    21 00000013 <res 00000050>              numbers resd 20
    22 00000063 FFFFFFFF                    smallest dd 0ffffffffh
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27 00000000 68[0A000000]                    push dword input_file_acces
    28 00000005 68[00000000]                    push dword input_file_name
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp,4*2
    31 00000013 A3[0C000000]                    mov [input_file_descriptor],eax
    32 00000018 83F800                          cmp eax,0
    33 0000001B 7460                            je final
    34 0000001D BE[13000000]                    mov esi,numbers
    35 00000022 B914000000                      mov ecx,20
    36                                          read:
    37 00000027 51                              push ecx
    38                                          
    39 00000028 56                              push esi
    40 00000029 68[10000000]                    push dword input_format
    41 0000002E FF35[0C000000]                  push dword [input_file_descriptor]
    42 00000034 FF15[00000000]                  call [fscanf]
    43 0000003A 83C40C                          add esp,4*3
    44 0000003D 83F8FF                          cmp eax,0ffffffffh
    45 00000040 7418                            je out_of_loop
    46 00000042 8B15[63000000]                  mov edx,[smallest]
    47 00000048 3B16                            cmp edx,[esi]
    48 0000004A 7208                            jb not_smaller
    49 0000004C 8B16                            mov edx,[esi]
    50 0000004E 8915[63000000]                  mov [smallest],edx
    51                                          not_smaller:
    52 00000054 83C604                          add esi,4
    53 00000057 59                              pop ecx
    54 00000058 E2CD                            loop read
    55                                          
    56                                          
    57                                          out_of_loop:
    58 0000005A FF35[0C000000]                  push dword [input_file_descriptor]
    59 00000060 FF15[00000000]                  call [fclose]
    60 00000066 83C404                          add esp,4
    61                                          
    62 00000069 FF35[63000000]                  push dword [smallest]
    63 0000006F 68[10000000]                    push dword input_format
    64 00000074 FF15[00000000]                  call [printf]
    65 0000007A 83C40C                          add esp,4*3
    66                                          final:
    67                                          ; exit(0)
    68 0000007D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    69 0000007F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
