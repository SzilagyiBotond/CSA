     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf
     8                                  extern biggest          ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  import scanf msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 <res 0000000A>              sir resb 10
    17 0000000A 00000000                    nr dd 0
    18 0000000E 256400                      format db "%d",0
    19 00000011 00000000                    save dd 0
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 68[0A000000]                    push dword nr
    25 00000005 68[0E000000]                    push dword format
    26 0000000A FF15[00000000]                  call [scanf]
    27 00000010 83C408                          add esp,4*2
    28 00000013 8B1D[0A000000]                  mov ebx,dword[nr]
    29 00000019 891D[11000000]                  mov [save],ebx
    30 0000001F BE[00000000]                    mov esi,sir
    31                                          init:
    32 00000024 68[0A000000]                    push dword nr
    33 00000029 68[0E000000]                    push format
    34 0000002E FF15[00000000]                  call [scanf]
    35 00000034 83C408                          add esp,4*2
    36 00000037 A0[0A000000]                    mov al,[nr]
    37 0000003C 8806                            mov [esi],al
    38 0000003E 46                              inc esi
    39                                          
    40 0000003F 89D9                            mov ecx,ebx
    41 00000041 4B                              dec ebx
    42 00000042 E2E0                            loop init
    43                                          
    44 00000044 FF35[11000000]                  push dword [save]
    45 0000004A 68[00000000]                    push dword sir
    46 0000004F E8(00000000)                    call biggest
    47 00000054 83C408                          add esp,4*2
    48                                          ; exit(0)
    49 00000057 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000059 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
