     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 3200                        a dw 50
    15 00000002 6400                        b dw 100
    16 00000004 0A00                        c dw 10
    17 00000006 0A00                        d dw 10
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 66B80000                        mov ax,0
    23 00000004 66BB0000                        mov bx,0
    24 00000008 66A1[02000000]                  mov ax, [b]
    25 0000000E 662B05[00000000]                sub ax, [a]
    26 00000015 668B1D[04000000]                mov bx, [c]
    27 0000001C 66031D[04000000]                add bx, [c]
    28 00000023 66031D[06000000]                add bx, [d]
    29 0000002A 6629D8                          sub ax, bx
    30                                          ; exit(0)
    31 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
